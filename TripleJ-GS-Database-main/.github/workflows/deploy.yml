name: CI/CD workflow to deploy package

on:
  pull_request:
    types: [closed]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 18.19.1
        uses: actions/setup-node@v4
        with:
          node-version: 18.19.1
      - name: install dependencies
        run: npm install
  publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/head/main'
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 18.19.1
      - name: install dependencies
        run: npm install
      - name: Configure Git
        run: git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"
      - name: Bump Version and Create Changelog
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      - name: Push Changes
        run: git push --follow-tags origin main
      - name: Authenticate and Publish
        run:
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  # deploy:
  #   needs: build-and-test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Use Node.js 20
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #     - name: Install dependencies
  #       run: npm install
  #     - name: Deploy Prisma Migrations
  #       run: npx prisma migrate deploy
  #       env:
  #         DATABASE_URL: ${{ secrets.DATABASE_URL }}
